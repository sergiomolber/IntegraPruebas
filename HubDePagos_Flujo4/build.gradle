apply plugin: 'java-library'
apply plugin: 'net.serenity-bdd.aggregator'

repositories {
    mavenLocal()
    mavenCentral()
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.80")
    }
}

dependencies {
    implementation 'net.serenity-bdd:serenity-junit:2.0.80'
    implementation 'net.serenity-bdd:serenity-cucumber:1.9.45'
    implementation 'net.serenity-bdd:serenity-core:2.0.80'
    implementation 'org.slf4j:slf4j-simple:1.7.7'
    implementation 'com.google.guava:guava:23.0'
    implementation group: 'org.apache.poi', name: 'poi', version: '4.1.2'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
    implementation group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'
    implementation group: 'com.sikulix', name: 'sikulixapi', version: '2.0.4'
    implementation 'com.github.2gis.winium:winium-webdriver:0.1.0-1'
    testImplementation 'com.thoughtworks.xstream:xstream:1.4.20' // O la versión más reciente disponible
    // Otras dependencias que necesites

}

test {
    // Ignorar fallas en los tests para que el build no se detenga
    ignoreFailures = true

    // Argumentos JVM para evitar InaccessibleObjectException
    jvmArgs += [
            '--add-opens', 'java.base/java.lang.reflect=ALL-UNNAMED',
            '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
            '--add-opens', 'java.base/java.text=ALL-UNNAMED',
            '--add-opens', 'java.desktop/java.awt.font=ALL-UNNAMED',
            '--add-opens', 'java.base/java.util=ALL-UNNAMED',
            '--add-opens', 'java.base/java.io=ALL-UNNAMED'
    ]
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

gradle.startParameter.continueOnFailure = true
